{"mappings":"oeAiKA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAQC,SAASC,cAAc,SAC/BC,EAAc,CAClBC,MAAOH,SAASC,cAAc,uBAC9BG,KAAMJ,SAASC,cAAc,sBAC7BI,OAAQL,SAASC,cAAc,yBAmCjC,SAASK,EAAcC,EAAUJ,GAC/B,OAAO,IAAIK,SAAQ,CAACC,EAAKC,KACvBC,YAAW,KACaC,KAAKC,SAAW,GAEpCJ,EAAI,uBAAqBF,QAAiBJ,OAExCO,EAAE,sBAAoBH,QAAeJ,MAAU,GAElDA,EAAM,G,CAzCKH,SAASc,eAAe,YAChCC,iBAAiB,SAAS,KAClCb,EAAYC,MAAMa,MAAQ,OACJd,EAAVE,KAAKY,MAAQ,MACzBd,EAAYG,OAAOW,MAAQ,GAAG,IAGhCjB,EAAMgB,iBAAiB,UAAUE,IAC/BA,EAAMC,iBAEN,MAAMf,EAAQgB,OAAOjB,EAAYC,MAAMa,OACjCZ,EAAOe,OAAOjB,EAAYE,KAAKY,OAC/BX,EAASc,OAAOjB,EAAYG,OAAOW,OAEzC,GAAIZ,EAAO,GAAKD,EAAQ,GAAKE,GAAU,EACrCR,EAAAuB,OAAOC,QAAQ,iDAIjB,IAAK,IAAIC,EAAI,EAAGA,EAAIjB,EAAQiB,GAAK,EAAG,CAGlChB,EAAcgB,EAAI,EAFGnB,EAAQmB,EAAIlB,GAG9BmB,MAAKP,IACJnB,EAAAuB,OAAOI,QAAQR,EAAM,IAEtBS,OAAMC,IACL7B,EAAAuB,OAAOC,QAAQK,EAAI,G","sources":["src/js/03-promises.js"],"sourcesContent":["//! ------------------------------   ВАРІАНТ 2   ----------------------------------\n//* Усунено зауваження ментора по 'Варіанту1':\n//*    - якщо step <0 або delay <0 або  amount <=0 показуємо нотифікашку і не рендеримо проміси\n//*    - інпут має бути дізейбл поки генератор промісів працює, щоб користувач не міг неконтрольовано замінити значення,\n//*      можемо для зручності користувача винести додатково кнопку reset, яка обнулює всі дані і зробить інпут\n//*      знову доступним для обрання промісів\n\n//! Бібліотека повідомлень\n//?    npm i notiflix\n\n//* Імпортуємо бібліотеку для сповіщень\n// import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\n// //* Вибираємо елементи - форму та поля вводу\n// const $form = document.querySelector('.form');\n// const $formInputs = {\n//   delay: document.querySelector('input[name=\"delay\"]'),\n//   step: document.querySelector('input[name=\"step\"]'),\n//   amount: document.querySelector('input[name=\"amount\"]'),\n// };\n// const $resetBtn = document.getElementById('resetBtn');\n\n// //* Забороняємо користувачу вводити значення поки генератор працює\n// $formInputs.delay.disabled = true;\n\n// //* Обробник події для подання форми:\n// $form.addEventListener('submit', event => {\n//   event.preventDefault();\n\n//   const delay = Number($formInputs.delay.value);\n//   const step = Number($formInputs.step.value);\n//   const amount = Number($formInputs.amount.value);\n\n//   if (step < 0 || delay < 0 || amount <= 0) {\n//     Notify.failure(\n//       'Incorrect values ​​of entered parameters! Некоректні значення введених параметрів!'\n//     );\n//     return;\n//   }\n\n//   //* Деактивуємо поле вводу під час роботи генератора\n//  $formInputs.delay.disabled = true;\n\n//   //* створюємо проміси в залежності від к-сті\n//   for (let i = 0; i < amount; i += 1) {\n//     //* Рахуємо затримку проміса\n//     const promiseDelay = delay + i * step;\n\n//     //* Створюємо проміс\n//     createPromise(i + 1, promiseDelay)\n//       .then(value => {\n//         Notify.success(value);\n//       })\n//       .catch(err => {\n//         Notify.failure(err);\n//       });\n//   }\n\n//   //* Після завершення таймера, активуємо поле вводу та видаляємо значення в ньому\n//   setTimeout(() => {\n//     $formInputs.delay.disabled = false;\n//     $formInputs.delay.value = '';\n//   }, delay + (amount - 1) * step + 100); //* Запасний час на виконання останнього проміса\n// });\n\n// $resetBtn.addEventListener('click', event => {\n//   event.preventDefault();\n\n//   //* Скидаємо значення полів вводу на стандартні\n//   $formInputs.delay.disabled = false;\n//   $formInputs.delay.value = 1000;\n//   $formInputs.step.value = 100;\n//   $formInputs.amount.value = 5;\n// });\n\n// //* Ф-ція для створення проміса\n// function createPromise(position, delay) {\n//   return new Promise((res, rej) => {\n//     setTimeout(() => {\n//       const shouldResolve = Math.random() > 0.3;\n//       if (shouldResolve) {\n//         res(`✅ Fulfilled promise ${position} in ${delay}ms`);\n//       } else {\n//         rej(`❌ Rejected promise ${position} in ${delay}ms`);\n//       }\n//     }, delay);\n//   });\n// }\n\n//! ------------------------------   ВАРІАНТ 3   ----------------------------------\n//* Замість інпут, тут кнопка дізейбл:\n\n// import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\n// const $form = document.querySelector('.form');\n// const $formInputs = {\n//   delay: document.querySelector('input[name=\"delay\"]'),\n//   step: document.querySelector('input[name=\"step\"]'),\n//   amount: document.querySelector('input[name=\"amount\"]'),\n// };\n// const $startBtn = document.querySelector('button[type=\"submit\"]');\n// const $resetBtn = document.getElementById('resetBtn');\n// let isPromiseRunning = false;\n\n// //* Деактивуємо кнопку \"Start\" при завантаженні сторінки\n// $startBtn.disabled = true;\n\n// //* Обробник події для подання форми:\n// $form.addEventListener('submit', event => {\n//   event.preventDefault();\n\n//   const delay = Number($formInputs.delay.value);\n//   const step = Number($formInputs.step.value);\n//   const amount = Number($formInputs.amount.value);\n\n//   if (step < 0 || delay < 0 || amount <= 0) {\n//     Notify.failure(\n//       'Incorrect values ​​of entered parameters! Некоректні значення введених параметрів!'\n//     );\n//     return;\n//   }\n\n//   //* Запобігаємо старту нових промісів, якщо генератор уже працює\n//   if (isPromiseRunning) {\n//     Notify.failure('Генератор вже запущений!');\n//     return;\n//   }\n\n//   isPromiseRunning = true;\n//   $startBtn.disabled = true; //* Деактивуємо кнопку \"Start\" під час роботи генератора\n\n//   for (let i = 0; i < amount; i += 1) {\n//     const promiseDelay = delay + i * step;\n\n//     createPromise(i + 1, promiseDelay)\n//       .then(value => {\n//         Notify.success(value);\n//       })\n//       .catch(err => {\n//         Notify.failure(err);\n//       });\n//   }\n\n//   //* Після завершення промісів, активуємо кнопку \"Start\" та встановлюємо змінну isPromiseRunning в false\n//   setTimeout(() => {\n//     isPromiseRunning = false;\n//     $startBtn.disabled = false;\n//   }, delay + (amount - 1) * step + 100); //* Запасний час на виконання останнього проміса\n// });\n\n// $resetBtn.addEventListener('click', event => {\n//   event.preventDefault();\n//   //* Скидаємо значення полів вводу на стандартні\n//   $formInputs.delay.disabled = false;\n//   $formInputs.delay.value = 1500;\n//   $formInputs.step.value = 1000;\n//   $formInputs.amount.value = 5;\n// });\n\n//! ------------------------------   ВАРІАНТ 4   ----------------------------------\n\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst $form = document.querySelector('.form');\nconst $formInputs = {\n  delay: document.querySelector('input[name=\"delay\"]'),\n  step: document.querySelector('input[name=\"step\"]'),\n  amount: document.querySelector('input[name=\"amount\"]'),\n};\n\nconst $resetBtn = document.getElementById('resetBtn');\n$resetBtn.addEventListener('click', () => {\n  $formInputs.delay.value = '1000'; //* Значення по замовчуванню\n  $formInputs.step.value = '500';\n  $formInputs.amount.value = '5';\n});\n\n$form.addEventListener('submit', event => {\n  event.preventDefault();\n\n  const delay = Number($formInputs.delay.value);\n  const step = Number($formInputs.step.value);\n  const amount = Number($formInputs.amount.value);\n\n  if (step < 0 || delay < 0 || amount <= 0) {\n    Notify.failure('Некоректні значення введених параметрів!');\n    return;\n  }\n\n  for (let i = 0; i < amount; i += 1) {\n    const promiseDelay = delay + i * step;\n\n    createPromise(i + 1, promiseDelay)\n      .then(value => {\n        Notify.success(value);\n      })\n      .catch(err => {\n        Notify.failure(err);\n      });\n  }\n});\n\nfunction createPromise(position, delay) {\n  return new Promise((res, rej) => {\n    setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n      if (shouldResolve) {\n        res(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      } else {\n        rej(`❌ Rejected promise ${position} in ${delay}ms`);\n      }\n    }, delay);\n  });\n}\n"],"names":["$iQIUW","parcelRequire","$47d4ff9957288465$var$$form","document","querySelector","$47d4ff9957288465$var$$formInputs","delay","step","amount","$47d4ff9957288465$var$createPromise","position","Promise","res","rej","setTimeout","Math","random","getElementById","addEventListener","value","event","preventDefault","Number","Notify","failure","i","then","success","catch","err"],"version":3,"file":"03-promises.61ae7a4f.js.map"}